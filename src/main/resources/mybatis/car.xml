<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.car.CarDAOInter">
  <!-- 등록한 레코드 갯수 1 리턴, #{masterno}: public int getMasterno() 호출됨 -->
  <insert id="create" parameterType="dev.mvc.car.CarVO">
    INSERT INTO car(carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, passwd, word, rdate, file1, file1saved, thumb1, size1, minprice, maxprice)
    VALUES(car_seq.nextval, #{modelno}, #{masterno}, #{title} , #{content},  #{manufacturer}, #{recom}, #{cnt}, #{replycnt}, #{passwd} , #{word}, sysdate, #{file1}, #{file1saved}, #{thumb1}, #{size1}, #{minprice}, #{maxprice})
  </insert>

 <!--  모든 차종의 등록된 차목록 -->
  <select id="list_all" parameterType="dev.mvc.car.CarVO">
    SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, passwd, word, rdate, file1, file1saved, thumb1, size1, minprice, maxprice
    FROM car
    ORDER BY carno DESC
  </select>
  
    <!-- 특정 차종의 등록된 차목록 -->
  <select id="list_by_modelno" resultType="dev.mvc.car.CarVO" parameterType="int">
    SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, passwd, word, rdate, file1, file1saved, thumb1, size1, minprice, maxprice
    FROM car
    WHERE modelno = #{modelno}
    ORDER BY carno DESC
  </select> 
  
  <!-- 일반적인 조회 -->
  <select id="read" resultType="dev.mvc.car.CarVO" parameterType="int">
    SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, passwd, word, rdate, file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice
    FROM car
    WHERE carno = #{carno}
  </select>
  
    <!-- map 등록, 수정, 삭제, HashMap: VO 클래스는 변수가 너무 많아서 메모리 낭비가 발생함으로 보통 3개 이하의 적은 변수만 전달하는 경우 사용 권장 -->
  <update id="map" parameterType="HashMap">
    UPDATE car SET map=#{map} WHERE carno=#{carno}
  </update>
  
  <!-- youtube 등록, 수정, 삭제, HashMap: VO 클래스는 변수가 너무 많아서 메모리 낭비가 발생함으로 보통 3개 이하의 적은 변수만 전달하는 경우 사용 권장 -->
  <update id="youtube" parameterType="HashMap">
    UPDATE car SET youtube=#{youtube} WHERE carno=#{carno}
  </update>
  
  <!-- 차종별 검색 목록 -->
  <select id="list_by_modelno_search" resultType="dev.mvc.car.CarVO" parameterType="HashMap">
    SELECTcarno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate, file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice
    FROM car
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE modelno=#{modelno}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE modelno=#{modelno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
    ORDER BY carno DESC   
  </select>
   
  <!-- 차종별 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM car
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE modelno=#{modelno}
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE modelno=#{modelno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
  </select>   

  <!-- 차종별 검색 + 페이징 목록 -->
  <select id="list_by_modelno_search_paging" resultType="dev.mvc.car.CarVO" parameterType="dev.mvc.car.CarVO">
   SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate, file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice, r
   FROM (
              SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate, file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice, rownum as r
              FROM (
                        SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate, file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice
                        FROM car
                        <choose>
                          <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                            WHERE modelno=#{modelno}
                          </when>
                          <otherwise>
                            WHERE modelno=#{modelno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                              OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                              OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
                          </otherwise>
                        </choose>
                        ORDER BY carno DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
    <!-- 1 page: WHERE r >= 1 AND r <= 10; 
          2 page: WHERE r >= 11 AND r <= 20;
          3 page: WHERE r >= 21 AND r <= 30; -->
  </select>
  
    <!-- 차종 추천  -->
  <select id="list_recommend_by_modelno" resultType="dev.mvc.car.CarVO" parameterType="int">
		SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate,
		       file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice, r
		FROM (
		           SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate,
		                  file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice, rownum as r
		           FROM (
		                     SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate,
		                            file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice
		                     FROM car
		                     WHERE modelno=#{modelno}
		                     ORDER BY carno DESC
		           )          
		)
		WHERE r &gt;= 1 AND r &lt;= 6
	     
  </select>
  
  <!-- 조회수별 자동차 추천 -->
  <select id="list_recommend_by_cnt" resultType="dev.mvc.car.CarVO" parameterType="int">
	  SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate,
	           file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice, r
	    FROM (
	               SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate,
	                      file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice, rownum as r
	               FROM (
	                         SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate,
	                                file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice
	                         FROM car
	                         ORDER BY cnt DESC
	               )          
	    )
	    WHERE r &gt;= 1 AND r &lt;= 6
    </select>
    
  <!-- 등록일자별 자동차 추천 -->
  <select id="list_recommend_by_rdate" resultType="dev.mvc.car.CarVO" parameterType="int">
	  SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate,
	           file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice, r
	    FROM (
	               SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate,
	                      file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice, rownum as r
	               FROM (
	                         SELECT carno, modelno, masterno, title, content, manufacturer, recom, cnt, replycnt, word, rdate,
	                                file1, file1saved, thumb1, size1, map, youtube, minprice, maxprice
	                         FROM car
	                         ORDER BY rdate DESC
	               )          
	    )
	    WHERE r &gt;= 1 AND r &lt;= 6
    </select>
  
    <!-- 패스워드 검사 -->
  <select id="password_check" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt 
    FROM car
    WHERE carno = #{carno} AND passwd=#{passwd}
  </select>
  
  <!-- 글 수정 -->
  <update id="update_text" parameterType="dev.mvc.car.CarVO">
    UPDATE car
    SET title=#{title}, content=#{content},  word=#{word}, minprice=#{minprice}, maxprice=#{maxprice}
    WHERE carno = #{carno}
  </update>
  
    <!-- 파일 수정 -->
  <update id="update_file" parameterType="dev.mvc.car.CarVO">
    UPDATE car
    SET file1=#{file1}, file1saved=#{file1saved}, thumb1=#{thumb1}, size1=#{size1}
    WHERE carno = #{carno}
  </update>
  
     <!-- 파일 삭제 -->
    <delete id="delete" parameterType="int">
    DELETE FROM car
    WHERE carno=#{carno}
  </delete>
  
    <!-- 특정 차종에 속한 레코드 개수를 리턴 -->
  <select id="count_by_modelno" resultType="int" parameterType="int">
    SELECT COUNT(*) as cnt 
    FROM car 
    WHERE modelno=#{modelno}
  </select>
    
     <!-- 특정 차종에 속한 모든 레코드 삭제 -->
  <delete id="delete_by_modelno" parameterType="int">
    DELETE FROM car
    WHERE modelno=#{modelno}
  </delete>   
  
    
    <!-- 추천 테이블에서 추천 차종 가져오기 -->
  <select id="search_model" resultType="int" parameterType="HashMap">
  SELECT modelno 
  FROM recommend 
  WHERE customerno=#{customerno}
  </select>
  
   <!-- 추천 많이받은 차종 가져오기 -->
  <select id="find_model" resultType="int" parameterType="HashMap">
		SELECT carno, masterno, modelno, title, content, recom, cnt, replycnt, rdate,
		           file1, file1saved, thumb1, size1, map, youtube, r
		FROM (
		           SELECT carno, masterno, modelno, title, content, recom, cnt, replycnt, rdate,
		                      file1, file1saved, thumb1, size1, map, youtube, rownum as r
		           FROM (
		                     SELECT carno, masterno, modelno, title, content, recom, cnt, replycnt, rdate,
		                                file1, file1saved, thumb1, size1, map, youtube
		                     FROM car
		                     WHERE modelno={modelno} 
		                     ORDER BY recom DESC
		           )          
		)
		 WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
  </select>
  
         
</mapper> 
